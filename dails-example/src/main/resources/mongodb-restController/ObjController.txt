package ${url}.controller;

import java.util.List;
import java.io.IOException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;


import ${domainUrl}.${Objname};
import ${url}.service.I${Objname}Service;

@RestController
@RequestMapping({ "/${objname}" })	
public class ${Objname}Controller {


	@Autowired																					
	private I${Objname}Service service;	
	
    private final Logger logger = LogManager.getLogger(this.getClass());

	
	@RequestMapping(value = { "","index" }, method = { RequestMethod.GET })						
	public ModelAndView getAllObj(HttpServletRequest request) {		
		ModelAndView mav = new ModelAndView("${objname}/index");								
		List<${Objname}> objs = service.findAll();												
		mav.addObject("objs", objs);															
		return mav;																				
	}																							
																								
	@RequestMapping(value = { "show/{id}" }, method = { RequestMethod.GET })						
	public ModelAndView showObj(HttpServletRequest request,@PathVariable String id) {
		   
		ModelAndView mav = new ModelAndView("${objname}/show");								
		${Objname} obj = service.findById(id);
		mav.addObject("obj", obj);
		
		return mav;																				
	}																							
																								
	@RequestMapping(value = { "new","add" }, method = { RequestMethod.GET })						
	public ModelAndView newObj() {																
		${Objname} obj = new ${Objname}();														
		ModelAndView mav = new ModelAndView("${objname}/new");								
		mav.addObject("obj", obj);															
		return mav;																				
	}																							
																								
	@RequestMapping(value = { "save" }, method = { RequestMethod.POST })						
	public void saveObj(@ModelAttribute("obj") ${Objname} obj,HttpServletResponse response) throws IOException {

		service.save(obj);																		
		response.sendRedirect("index");						
	}																							
																								
	@RequestMapping(value = { "edit" }, method = { RequestMethod.GET })						
	public ModelAndView editObj(@RequestParam("id") String id) {
		ModelAndView mav = new ModelAndView("${objname}/edit");								
		${Objname} obj = service.findById(id);													
		mav.addObject("obj", obj);															
		return mav;																				
	}																							
																								
																						
																								
	@RequestMapping(value = { "delete" }, method = { RequestMethod.GET })						
	public String deleteObj(@RequestParam("id") String id, Model model, RedirectAttributes redirectAttributes) {
		service.delete(id);																		
		redirectAttributes.addFlashAttribute("msg", "删除成功");								
		return "redirect:index";															
	}	

	
	
	
}
